"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    books: [Book!]! @all
    book(id: ID @eq): Book @find
}

type Mutation{
    createUser(name: String!, email: String!): User @create
    deleteUser(id: ID!): User @delete

    createComment(name: String, text: String!,book_id: ID!): Comment @create
    updateComment(id: ID! , emotion: String): Comment @update
    deleteComment(id: ID!): Comment @delete

    createBook(suggest: String!,bookisnb: String!): Book @create
    updateBook(id: ID, suggest: String): Book @update
    
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    books: [Book!]! @hasMany
}
type Book{
    id: ID!
    bookisnb: String
    suggest: String
    created_at: DateTime
    updated_at: DateTime
    comments: [Comment!]! @hasMany
}
type Comment {
  id: ID!
  text: String!
  name: String
  book: Book! @belongsTo
  created_at: DateTime
  updated_at: DateTime
}